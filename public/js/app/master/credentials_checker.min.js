const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));

var userData;
const getDataUser = async () => {
    let findToken = localStorage.getItem('_jwtApiToken');
    if (findToken) {
        return await axios.get(`/api/user-credentials`, { headers: { 'Accept': 'application/json', 'Authorization': `Bearer ${localStorage.getItem('_jwtApiToken')}` } })
    } else {
        if (Request(1) != 'signin') {
            redirectTo('/signin')
        }
    }
}

$(async () => userData = await getDataUser());

const postUser = () => {
    return (userData) ? (userData.data.response_data[0][0]) : null;
}

const redirectTo = async (url) => {
    await sleep(3000);
    $(location).attr('href', url);
}

const checkCredentials = () => {
    let user = postUser();
    let findToken = localStorage.getItem('_jwtApiToken');
    findToken ? (user ? '' : redirectTo('/signin')) : redirectTo('/signin');
}


/**
 * logout
 */
const userSignout = () => {
    localStorage.removeItem('_jwtApiToken');
    toastSuccess('Logout Successfully');
    redirectTo('/signin');
}
